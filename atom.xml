<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>主人忘归客不发</title>
  
  <subtitle>欲语迟</subtitle>
  <link href="http://quruipeng666.github.io/atom.xml" rel="self"/>
  
  <link href="http://quruipeng666.github.io/"/>
  <updated>2024-03-15T09:18:40.625Z</updated>
  <id>http://quruipeng666.github.io/</id>
  
  <author>
    <name>GameDesignerQ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数组的学习</title>
    <link href="http://quruipeng666.github.io/2024/03/15/%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://quruipeng666.github.io/2024/03/15/%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%A6%E4%B9%A0/</id>
    <published>2024-03-15T09:16:13.000Z</published>
    <updated>2024-03-15T09:18:40.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>是用来存储数据的集合。数组是要指定长度的。</p><h3 id="数组的特性："><a href="#数组的特性：" class="headerlink" title="数组的特性："></a>数组的特性：</h3><p>1.元素类型相同</p><p>2.固定长度</p><p>3.顺序存储的集合</p><h3 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h3><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//定义int类型的数组</span></span><br><span class="line"><span class="built_in">int</span>[] array1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//直接定义初始化存储</span></span><br><span class="line"><span class="built_in">int</span>[] array2 = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//直接写值，array3长度是5并且长度不能变</span></span><br><span class="line"><span class="built_in">int</span>[] array3 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//代表当前这个int型数组只能存储3个int型的变量,默认值是0</span></span><br><span class="line">array1 = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//array1的第一个值就是array1[0]</span></span><br><span class="line">array1[<span class="number">0</span>] = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//array1只给分配了三个空间，array1[3]是第四个值，拿不到的，如果这样写在编译期间不会报错，在运行期间会产生一个数组越界的错误。</span></span><br><span class="line"><span class="comment">//array1.Length的值就是3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组的遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;array3.Length;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//打印array3[i]的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用foreach遍历</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> v <span class="keyword">in</span> array2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//打印v的值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h2&gt;&lt;p&gt;是用来存储数据的集合。数组是要指定长度的。&lt;/p&gt;
&lt;h3 id=&quot;数组的特性：&quot;&gt;&lt;a href=&quot;#数组的特性：&quot; class=&quot;hea</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>每日一刷一一Csharp面试题</title>
    <link href="http://quruipeng666.github.io/2024/03/14/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%88%B7%E4%B8%80%E4%B8%80Csharp%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://quruipeng666.github.io/2024/03/14/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%88%B7%E4%B8%80%E4%B8%80Csharp%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2024-03-14T14:03:00.000Z</published>
    <updated>2024-03-14T14:03:29.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="C-面试题两道"><a href="#C-面试题两道" class="headerlink" title="C#面试题两道"></a>C#面试题两道</h2><h3 id="值类型和引用类型有什么区别？"><a href="#值类型和引用类型有什么区别？" class="headerlink" title="值类型和引用类型有什么区别？"></a>值类型和引用类型有什么区别？</h3><p>值类型：包含了所有简单类型（整数、浮点、bool、char）、struct、enum。</p><p>继承自System.ValueType</p><p>引用类型：包含了string，object，class，interface，delegate，array</p><p>继承自System.Object</p><p>1.值类型存储在内存栈中，引用类型数据存储在内存堆中，而内存单元中存放的是堆中存放的地址。</p><p>2.值类型存取快，引用类型存取慢。</p><p>3.值类型表示实际数据，引用类型表示指向存储在内存堆中的数据的指针和引用。</p><p>4.栈的内存是自动释放的，堆内存是.NET 中会由 GC 来自动释放。</p><p>5.值类型继承自 System.ValueType,引用类型继承自 System.Object。</p><p>6.值类型直接存放实际的数据，⽽引⽤类型存放的则是数据的地址，即对象的引⽤。</p><p>7.值类型变量直接把变量的值保存在堆栈中，引⽤类型的变量把实际数据的地址保存在堆栈中。</p><h3 id="什么是匿名方法？"><a href="#什么是匿名方法？" class="headerlink" title="什么是匿名方法？"></a>什么是匿名方法？</h3><p>匿名⽅法是⽤作委托的参数的⼀段代码。</p><p>举例子</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">//匿名方法，例1</span></span><br><span class="line">Func&lt;<span class="built_in">int</span>, <span class="built_in">int</span>&gt; anon = <span class="built_in">delegate</span>(<span class="built_in">int</span> i)</span><br><span class="line">&#123;</span><br><span class="line">i = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//输出2</span></span><br><span class="line">Console.WriteLine(anon(<span class="number">1</span>));</span><br><span class="line"><span class="comment">//匿名方法，例2</span></span><br><span class="line">Action&lt;<span class="built_in">int</span>&gt; anon2 = <span class="built_in">delegate</span>(<span class="built_in">int</span> i)</span><br><span class="line">&#123;</span><br><span class="line">i = i + <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//输出2</span></span><br><span class="line">Console.WriteLine(anon(<span class="number">1</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;C-面试题两道&quot;&gt;&lt;a href=&quot;#C-面试题两道&quot; class=&quot;headerlink&quot; title=&quot;C#面试题两道&quot;&gt;&lt;/a&gt;C#面试题两道&lt;/h2&gt;&lt;h3 id=&quot;值类型和引用类型有什么区别？&quot;&gt;&lt;a href=&quot;#值类型和引用类型有什么区别？&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
